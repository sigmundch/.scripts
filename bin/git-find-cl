#!/usr/bin/env dart
import 'dart:io' show Process, exit;

printUsage() {
  print('''
usage: git find-cl [option]
  Show all git branches that are associated with a rietveld issue, and the
  corresponding issue number if it's available.

  Note: this doesn't check if the issue has been closed in the rietveld server,
  it only checks that there is an issue number associated with a local branch
  and whether there was an issue entry for the branch in the past.

Possible options:
  dead           show only branches missing a issue number.
  live           show only branches with a corresponding issue number.
  issue#         show all branches, but highlight the one matching your issue
                 number
  -h or --help   print this message.
''');
}

/// This script finds landed `git cl` branches and prints them.
/// The output can be piped to `xargs git branch -D` for example.
main(args) {
  bool findDead = true;
  bool findLive = true;
  String issueId;
  if (args.length > 0) {
    if (args[0] == '-h' || args[0] == '--help') {
      printUsage();
      exit(0);
    }

    if (args[0] == 'dead') {
      findLive = false;
    } else if (args[0] == 'live') {
      findDead = false;
    } else {
      issueId = args[0];
    }
  }

  var result = Process.runSync('git', ['config', '-l']);
  if (result.exitCode != 0) exit(result.exitCode);
  var matches = new RegExp(r'^branch\.(.+)\.(rietveld[^\.=]+)=(\w+)',
      multiLine: true).allMatches(result.stdout);
  var info = {};
  for (var match in matches) {
    var name = match[1];
    var branch = info.putIfAbsent(name, () => new Branch(name));
    if (match[2] == 'rietveldserver') branch.hasServer = true;
    if (match[2] == 'rietveldissue') branch.issueId = match[3];
  }
  for (var branch in info.values) {
    if (findDead && !branch.isLive) branch.prettyPrint();
    if (findLive && branch.isLive) {
      branch.prettyPrint(highlight: issueId == branch.issueId);
    }
  }
}

class Branch {
  final String name;
  get isLive => hasServer && issueId != null;
  bool hasServer;
  String issueId;
  Branch(this.name);

  prettyPrint({bool highlight}) {
    var liveColor = highlight ? '32;1m' : '32m';
    var sb = new StringBuffer()
      ..write(name)
      ..write(':')
      ..write(' ' * (30 - name.length))
      ..write(isLive ? '[$liveColor' : '[31m')
      ..write(isLive ? (highlight ? '$issueId <--' : issueId) : 'dead')
      ..write('[0m');
    print('$sb');
  }
}

// vim: set filetype=dart:
